apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: liquibase-pipeline
  namespace: default
  annotations:
    argocd.argoproj.io/hook: PreSync
spec:
  entrypoint: liquibase-pipeline
  serviceAccountName: argo-workflow
  templates:
    - name: liquibase-pipeline
      steps:
      - - name: liquibase-update
          template: liquibase-update
          
      - - name: verify-e2e
          template: verify-e2e
          
      - - name: notify-success
          template: notify
          arguments:
            parameters:
              - name: message
                value: "✅ Verification passed"
          when: "'{{ "{{" }}steps.verify-e2e.outputs.parameters.test-status{{ "}}" }}' == 'passed'"
        
        - name: handle-failure
          template: handle-failure
          when: "'{{ "{{" }}steps.verify-e2e.outputs.parameters.test-status{{ "}}" }}' == 'failed'"

    - name: handle-failure
      steps:
      - - name: notify-failure
          template: notify
          arguments:
            parameters:
              - name: message
                value: "❌ Verification failed, initiating rollback"
                
      - - name: liquibase-rollback
          template: liquibase-rollback

    - name: liquibase-update
      container:
        image: alpine:3.19
        command: [sh, -c]
        args:
          - |
            echo "Simulating Liquibase update..."
            # Always exit with 0
            exit 0

    - name: verify-e2e
      container:
        image: alpine
        command: [sh, -c]
        args:
          - |
            echo "Running e2e tests..."
            if [ $((RANDOM % 2)) -eq 0 ]; then
              echo "passed" > /tmp/test-status.txt
            else
              echo "failed" > /tmp/test-status.txt
            fi
            # Always exit with 0
            exit 0
      outputs:
        parameters:
          - name: test-status
            valueFrom:
              path: /tmp/test-status.txt

    - name: liquibase-rollback
      container:
        image: alpine
        command: [sh, -c]
        args:
          - |
            echo "Simulating Liquibase rollback..."
            # Always exit with 0
            exit 0

    - name: notify
      inputs:
        parameters:
          - name: message
      container:
        image: alpine
        command: [sh, -c]
        args:
          - |
            echo "{{ "{{" }}inputs.parameters.message{{ "}}" }}"
            # Always exit with 0
            exit 0
